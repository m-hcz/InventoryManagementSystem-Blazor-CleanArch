@inject IDeleteProductUseCase _DeleteProductUseCase
@inject NavigationManager _NavigationManager

@if (Product is not null)
{
	<tr>
		<td>@Product.Name</td>
		<td>@Product.Quantity</td>
		<td>@Product.Price.ToString("c")</td>
		<td>
			<a href="/editProduct/@Product.Id" class="btn btn-light">Edit</a>
		</td>
		<td>
			<button type="button" class="btn btn-danger" @onclick="async () => { await HandleDelete(Product.Id); }">Delete</button>
		</td>
	</tr>
}

@code {
	[Parameter]
	public Product? Product { get; set; }

	private async Task HandleDelete(int id)
	{
		// deletes backend
		await _DeleteProductUseCase.ExecuteAsync(id);

		// deletes frontend
		Product = null;
	}
}

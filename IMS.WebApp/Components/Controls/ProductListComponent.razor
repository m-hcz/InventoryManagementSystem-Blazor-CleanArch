@inject IViewProductsByNameUseCase _ViewProductsByNameUseCase

<table class="table">
	<thead>
		<tr>
			<th>Name</th>
			<th>Quantity</th>
			<th>Price</th>
			<th style="text-align:left"></th>
			<th style="text-align:left"></th>
		</tr>
	</thead>
	<tbody>
		@if (Products is not null && Products.Any())
		{
			foreach (var product in Products)
			{
				<ProductListItemComponent @rendermode="InteractiveServer" Product="product" />
			}
		}
	</tbody>
</table>

@code {
	List<Product>? Products;

	[Parameter]
	public string? SearchProductFilter { get; set; }

	protected override async Task OnParametersSetAsync()
	{
		Products = (await _ViewProductsByNameUseCase.ExecuteAsync(SearchProductFilter ?? "")).ToList();
	}
}